import pandas

sample_csv = pandas.read_csv('sample_sheet.csv', index_col='name')
CONDITIONS = set(sample_csv['condition'].tolist())
REPS = set(sample_csv['replicate'].tolist())

rule all:
	input:
		expand('results/{condition}_{rep}.bam', condition = CONDITIONS, rep = REPS),
	
		expand('results/{condition}_{rep}.sorted.bam', condition = CONDITIONS, rep = REPS )

rule bowtie2_align:
	input:
		'samples/{condition}_{rep}.trimmed.fq.gz'
	output:
		'results/{condition}_{rep}.bam'
	threads: 16
	# params:
	conda:
		'envs/bowtie2_env.yml'
	shell:
		'''
		bowtie2 -x results/bt2_index/chr21/GRCh38.chr21 -U {input} | 
		samtools view -b > {output}
		'''

rule samtools_sort:
	input:
		'results/{condition}_{rep}.bam'
	output:
		'results/{condition}_{rep}.sorted.bam'
	conda:
		'envs/samtools_env.yml'
	shell:
		'''
		samtools sort {input} -o {output}
		'''

#rule samtools_idx:
#	input:
#	output:
#	conda:
#		'envs/samtools_env.yml'
#	shell:
#
#rule multiqc:
#	input:
#	output:
#	params:
#	conda:
#		'envs/multiqc_env.yml'
#	shell:
#
#rule bamCoverage:
#	input:
#	output:
#	threads: 4
#	conda:
#		'envs/deeptools_env.yml'
#	shell:
#
#rule multiBwSummary:
#	input:
#	output:
#	conda:
#		'envs/deeptools_env.yml'
#	shell:

#rule plotCorrelation:
#	input:
#	output:
#	params:
#	conda:
#		'envs/deeptools_env.yml'
#	shell:
