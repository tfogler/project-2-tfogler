import pandas

sample_csv = pandas.read_csv('sample_sheet.csv', index_col='name')
CONDITIONS = set(sample_csv['condition'].tolist())
REPS = set(sample_csv['replicate'].tolist())

rule all:
	input:
		directory(expand('results/{condition}_{rep}_tag_dir', condition = CONDITIONS, rep = REPS))

rule make_tag_dir:
	input:
		bam = "results/{condition}_{rep}.sorted.bam"
	output:
		tag_dir = directory("results/{condition}_{rep}_tag_dir")
	params:
	threads: 4
	conda:
		'envs/homer_env.yml'
	shell:
		'''
		makeTagDirectory {output.tag_dir} {input.bam}
		'''

#rule findPeaks:
#	input:
#	output:
#	conda:
#		'envs/homer_env.yml'
#	shell:

#rule convertPeakFiles:
#	input:
#	output:
#	conda:
#		'envs/homer_env.yml'
#	shell:

#rule intersect_peaks:
#	input:
#	output:
#	conda:
#		'envs/bedtools_env.yml'
#	shell:

#rule filter_blacklist:
#	input:
#	output:
#	conda:
#		'envs/bedtools_env.yml'
#	shell:

#rule unzip_gtf:
#	input:
#	output:
#	shell:

#rule annotate_peaks:
#	input:
#	output:
#	conda:
#		'envs/homer_env.yml'
#	shell:

#rule unzip_genome:
#	input:
#	output:
#	shell:

#rule motifs:
#	input:
#	output:
#	conda:
#		'envs/homer_env.yml'
#	shell:
